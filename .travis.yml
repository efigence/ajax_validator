gemfile:
  - gemfiles/rails4.1.gemfile
#  - gemfiles/rails4.2.gemfile
install:
  - 'travis_retry bundle install'
  - 'travis_retry bundle exec appraisal'
language:
  - ruby
  - node_js
node_js:
  - "5.6.0"
rvm:
  - 2.2.4
sudo: false
cache:
  bundler: true
  directories:
    - node_modules
    # - travis_phantomjs
    - tmp/cache/assets/test/sprockets
services:
  - postgresql
before_install:
  # - "echo `phantomjs --version`"
  # - "export PATH=$PWD/travis_phantomjs/phantomjs-2.1.1-linux-x86_64/bin:$PATH"
  # - "export PHANTOMJS_BIN=$PWD/travis_phantomjs/phantomjs-2.1.1-linux-x86_64/bin/phantomjs"
  # - "if [ $(phantomjs --version) != '2.1.1' ]; then rm -rf $PWD/travis_phantomjs; mkdir -p $PWD/travis_phantomjs; fi"
  # - "if [ $(phantomjs --version) != '2.1.1' ]; then wget --verbose https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 -O $PWD/travis_phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2; fi"
  # - "if [ $(phantomjs --version) != '2.1.1' ]; then tar -xvf $PWD/travis_phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2 -C $PWD/travis_phantomjs; fi"
  # - "chmod +x $PWD/travis_phantomjs/phantomjs"
  # - "echo `phantomjs --version`"
  - "echo $(phantomjs --version)"
  - npm install phantomjs@2.1.1 --save-dev --verbose --cache-min 999999 --phantomjs_cdnurl=http://cnpmjs.org/downloads
  - "echo $(phantomjs --version)"
env:
  global:
    - DB=postgresql
    - DUMMY_DATABASE_USERNAME=postgres
    - DUMMY_DATABASE_PASSWORD=''
    - DATABASE_URL='postgres://localhost:5432'
    - RAILS_ENV=test
    - NODE_ENV="development"
bundler_args: --without development vagrant
sudo: false
script:
  - bundle exec appraisal rake db:create db:schema:load
  - bundle exec appraisal rake spec
before_script:
  - sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'DROP DATABASE IF EXISTS ajax_validator_test;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'CREATE DATABASE ajax_validator_test;' -U postgres; fi"
#  - sh -c "if [ '$DB' = 'postgresql' ]; then psql -c 'CREATE USER ajax_validator;' -U postgres; fi"
#branches:
#  only:
#    - master
#notifications:
  #email:
  #  on_success: change
  #  on_failure: always
  #webhooks:
  #  urls:
  #    - https://webhooks.gitter.im/e/<add webhook id here>
  #  on_success: change
  #  on_failure: always
  #  on_start: false
#after_success:
  #- bash <(curl -s https://codecov.io/bash)
  #- ./deploy_snapshot.sh
#before_install:
#  - chmod +x ./deploy_snapshot.sh
